#!/usr/bin/env bash

set -e # Fails on the first error

##
# Linting/testing/sanity checking
##

# shellcheck source=bin/utils.sh
source "$(dirname "$0")/utils.sh"

bash_files=(bin/build bin/deploy bin/test bin/install_dependencies git/pre-push)

function start() {
    lint
    run_tests
}

function lint() {
    # Unit test to make sure that we're keeping to best
    # practices with our bash scripts
    for bash_file in "${bash_files[@]}"; do
        # The -x directive allows shellcheck to follow other files
        # used here for following the sourced utility files
        if shellcheck -x "${bash_file}" ; then
            success "Linting: Successfully linted the bash file: ${bash_file}"
        else
            fail "Linting: Failed to lint the bash file: ${bash_file}"
        fi
    done
}

function run_tests() {
    pytest
}

start
