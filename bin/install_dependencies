#!/usr/bin/env bash

set -e # Fails on the first error

##
# Installs dependencies required for
# building/testing/deploying
##

source "bin/utils.sh"

function start() {
    install_texlive_package_manager

    # Debugging information
    info "Imagemagick version and delegate info"
    convert --version

    # Imagemagick 6 hack for ubuntu 18.04+,
    # see https://askubuntu.com/a/1081907 for more information
    # In theory we can replace <policy domain="coder" rights="none" pattern="PDF" />
    # with <policy domain="coder" rights="read|write" pattern="PDF" />, but also I don't
    # really care
    cat /etc/ImageMagick-6/policy.xml
    sudo mv /etc/ImageMagick-6/policy.xml /etc/ImageMagick-6/policy.xml.backup

    install_python_dependencies
}

function install_texlive_package_manager() {
    # We use TexLive since we need an easy way to
    # download specific packages easily on a *nix
    # system, as there's no equivalent to (and it'd
    # be prohibitively slow) MacTex's "everything included"
    # mentality
    bootstrap_texlive_package_manager
    update_texlive_package_manager
    verify_texlive_package_manager
    install_tex_dependency_packages

    # Keep no backups (not required, simply makes cache bigger)
    info "TexLive: Disabling backups"
    tlmgr option -- autobackup 0
    success "TexLive: Backups are disabled"

    update_cache_manifest
}

function bootstrap_texlive_package_manager() {
    # Modified from https://tex.stackexchange.com/questions/398830/how-to-build-my-latex-automatically-with-pdflatex-using-travis-ci/398831#398831

    # See if there is a cached version of TL available
    info "TexLive: Checking for cache version existence"
    export PATH=/tmp/texlive/bin/x86_64-linux:$PATH
    if ! command -v texlua > /dev/null; then
        info "TexLive: Could not be found in cache, downloading and installing now"

        # Obtain TeX Live
        wget http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz
        tar -xzf install-tl-unx.tar.gz

        # Technically this'll only work until 2100 AD,
        # but I'm willing to take the risk that I'll be
        # dead by then or the services I'm using will
        # have changed/died out
        cd install-tl-20* || exit

        # Install a minimal system
        ./install-tl --profile=../bin/texlive.profile

        cd ..
        success "TexLive: Minimal texlive version was installed"
    else
        success "TexLive: Cached version found and installed"
    fi
}

function update_texlive_package_manager() {
    # Update the TL install but add nothing new
    info "TexLive: Updating to the latest version"
    tlmgr update --self --all --no-auto-install
    success "TexLive: Updated to the latest version"
}

function verify_texlive_package_manager() {
    # Just including texlua so the cache check above works
    # Needed for any use of texlua even if not testing LuaTeX
    info "TexLive: Checking for the installed luatex"
    tlmgr install luatex
    success "TexLive: Luatex was found"
}

function install_tex_dependency_packages() {
    # Installs the dependencies that we need
    # NOTE:
    #   - Other additional packages should be added to the block to avoid
    #     multiple calls to tlmgr
    #   - Package `ms` gives us `everyshi.sty`, which is a requirement
    #   - Package `collection-fontsrecommended` contains a lot of fonts,
    #     but we really just need `EU` and a few others
    #   - Package `fontawesome` and the binary from apt are both required
    info "TexLive: Installing dependencies"
    tlmgr install                   \
        datetime2                   \
        tracklang                   \
        collection-fontsrecommended \
        xcolor                      \
        fontawesome                 \
        titlesec                    \
        textpos                     \
        ms                          \
        substr                      \
        isodate                     \
        fontspec                    \
        xltxtra                     \
        realscripts                 \
        etoolbox                    \
        xkeyval                     \
        datenumber                  \
        pdfescape                   \
        letltxmacro                 \
        bitset                      \
        xetex
    success "TexLive: All dependencies installed"
}

function update_cache_manifest() {
  info "Updating cache manifest"
  tlmgr list --only-installed --data name,lcat-version > /tmp/texlive/package-manifest.txt
}

function install_python_dependencies() {
    # Installs wheel since it throws a warning about falling back
    #   to using the old setup.py if it's not installed
    pip install wheel

    # We install dev since we're running tests- if we're on our
    #   local and don't need to run tests, we can just do
    #   pip install -r requirements/common.txt
    pip install -r requirements/dev.txt
}

start
