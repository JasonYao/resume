#!/usr/bin/env bash

tex_file_name=Resume_Jason_Yao.tex

##
# Pretty output functions
##

function info() {
	printf "\\t  [\\033[00;34mINFO\\033[0m] %s\\n" "${1}"
}

function user() {
	printf "\\t  [ \\033[0;33m??\\033[0m ] %s\\n" "${1}"
}

function success() {
	printf "\\t\\033[2K  [ \\033[00;32mOK\\033[0m ] %s\\n" "${1}"
}

function warn() {
	printf "\\t\\033[2K  [\\033[38:2:255:165:0mWARN\\033[0m] %s\\n" "${1}"
}

function fail() {
	printf "\\t\\033[2K  [\\033[0;31mFAIL\\033[0m] %s\\n" "${1}"
	exit 1
}

###
# Helper functions
##

function stash_pop() {
	# Puts back the stuff that wasn't committed
	info "Git stashing: Putting back temporarily stashed files"
	git stash pop -q
}

function stash_push() {
    info "Git stashing: Stashing non-committed files temporarily"
    if git stash -q --keep-index ; then
        success "Git stashing: All non-committed files have been temporarily stashed"
    else
        warn "Git stashing: An error occurred trying to stash non-relevant files, please check for any merge conflicts"
        exit 1
    fi
}

function generate_pdf() {
    count=$1
    input_tex_file_name=$2

    info "Build ${count}: Generating resume document now"
	if xelatex "${input_tex_file_name}" ; then
		success "Build ${count}: Generated the new resume document"
    else
		fail "Build ${count}: Failed to generate the new resume document"
    fi
}

# Generates the resume PDF
for count in {1..3}
do
	generate_pdf ${count} ${tex_file_name}
done

# Generates the image thumbnail
info "Thumbnail Build: Generating image thumbnail now"
if convert -density 300 -quality 90 "${TRAVIS_BUILD_DIR}/Resume_Jason_Yao.pdf" "${TRAVIS_BUILD_DIR}/Resume_Jason_Yao.png" ; then
    success "Thumbnail Build: Generated the new image thumbnail"
else
    warn "Thumbnail Build: Failed to generate the new image thumbnail"
    exit 1
fi
