#!/usr/bin/env bash

set -e # Fails on the first error

##
# Generates a given pdf and thumbnail
# image from a tex file
##

# shellcheck source=bin/utils.sh
source "$(dirname "$0")/utils.sh"

base_file_name="Resume_Jason_Yao"
tex_file_name="${base_file_name}.tex"

function start() {
    generate_outputs

    generate_pdf "${tex_file_name}"

    # We use the absolute path here because
    # imagemagick 6 throws exceptions with a
    # relative path
    generate_thumbnail "$(pwd)/${base_file_name}"
}

function generate_outputs() {
    info "Generating output formats"
    if python main.py ; then
      success "Successfully generated output formats"
    else
      fail "Failed to generate output formats"
    fi
}

function generate_pdf() {
    input_file_name=$1
    # We generate the image 3 times to let it stabilize
    for count in {1..3}
    do
        generate_pdf_once "${count}" "${input_file_name}"
    done
}

function generate_pdf_once() {
    count=$1
    input_tex_file_name=$2

    # Other scripts apparently don't export PATHs correctly between github action steps
    export PATH=/tmp/texlive/bin/x86_64-linux:$PATH

    info "Build ${count}: Generating resume document now"
    if xelatex "${input_tex_file_name}" ; then
        success "Build ${count}: Generated the new resume document"
    else
        fail "Build ${count}: Failed to generate the new resume document"
    fi
}

function generate_thumbnail() {
    # Generates the image thumbnail for a given pdf
    absolute_base_file_name=$1
    info "Thumbnail Build: Generating image thumbnail now"

    if convert -flatten -density 300 "${absolute_base_file_name}.pdf[0]" "${absolute_base_file_name}.png" ; then
        success "Thumbnail Build: Generated the new image thumbnail"
    else
        fail "Thumbnail Build: Failed to generate the new image thumbnail"
    fi
}

start
